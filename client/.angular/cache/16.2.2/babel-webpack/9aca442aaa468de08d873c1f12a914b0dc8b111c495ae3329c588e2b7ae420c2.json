{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.backendUrl = 'http://localhost:8080/user'; // Remplacez par l'URL de votre point d'API\n  }\n  // Vérifie si l'utilisateur est authentifié côté serveur\n  isAuthenticated() {\n    return this.http.get(`${this.backendUrl}/is-authenticated`, {\n      withCredentials: true\n    });\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","http","backendUrl","isAuthenticated","get","withCredentials","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\nohad\\OneDrive\\Documents\\INFO_4\\CPOO\\cpoo-menfaa-doaif\\cpoo-menfaa-doaif-version-pr-finale4\\client\\src\\app\\services\\AuthService.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n    })\r\n    export class AuthService {\r\n    private backendUrl = 'http://localhost:8080/user'; // Remplacez par l'URL de votre point d'API\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    // Vérifie si l'utilisateur est authentifié côté serveur\r\n    isAuthenticated(): Observable<boolean> {\r\n        return this.http.get<boolean>(`${this.backendUrl}/is-authenticated`,{withCredentials:true});\r\n    }\r\n    }"],"mappings":";;;AAOI,OAAM,MAAOA,WAAW;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,UAAU,GAAG,4BAA4B,CAAC,CAAC;EAEZ;EAEvC;EACAC,eAAeA,CAAA;IACX,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,UAAU,mBAAmB,EAAC;MAACG,eAAe,EAAC;IAAI,CAAC,CAAC;EAC/F;;SARaN,WAAW;;mBAAXA,MAAW,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXV,MAAW;EAAAW,OAAA,EAAXX,MAAW,CAAAY,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}