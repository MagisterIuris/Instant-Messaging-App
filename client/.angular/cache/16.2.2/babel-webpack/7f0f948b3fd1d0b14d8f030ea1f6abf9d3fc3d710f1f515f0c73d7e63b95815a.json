{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SignUpService {\n  constructor(http) {\n    this.http = http;\n    this.backendUrl = 'http://localhost:8080/user/signup';\n  }\n  signinMyUser(signUpData) {\n    console.log(signUpData);\n    return this.http.post(this.backendUrl, signUpData, {\n      withCredentials: true\n    });\n  }\n}\n_class = SignUpService;\n_class.ɵfac = function SignUpService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["SignUpService","constructor","http","backendUrl","signinMyUser","signUpData","console","log","post","withCredentials","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/aymenf/dossier-a-push/cpoo-menfaa-doaif/client/src/app/services/SignUpService.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n    @Injectable({\n        providedIn: 'root'\n    })\n    \n    export class SignUpService {\n        private backendUrl = 'http://localhost:8080/user/signup';\n    \n        constructor(private http: HttpClient) {}\n    \n        signinMyUser(signUpData: any): Observable<any> {\n            console.log(signUpData);\n            return this.http.post(this.backendUrl, signUpData, {withCredentials:true});\n        }\n    }"],"mappings":";;;AAQI,OAAM,MAAOA,aAAa;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,UAAU,GAAG,mCAAmC;EAEjB;EAEvCC,YAAYA,CAACC,UAAe;IACxBC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;IACvB,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CAAC,IAAI,CAACL,UAAU,EAAEE,UAAU,EAAE;MAACI,eAAe,EAAC;IAAI,CAAC,CAAC;EAC9E;;SARST,aAAa;;mBAAbA,MAAa,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAbb,MAAa;EAAAc,OAAA,EAAbd,MAAa,CAAAe,IAAA;EAAAC,UAAA,EAHV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}